<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AuthService</name>
    </assembly>
    <members>
        <member name="P:AuthService.Application.Commands.RegisterPhone.RegisterPhoneCommand.PhoneNumber">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:AuthService.Application.Commands.RegisterPhone.RegisterPhoneCommand.VerifyCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="M:AuthService.Areas.Identity.Pages.Account.RegisterModel.SendUserRegisteredEventAsync(System.String)">
            <summary>
            自定义代码，通知订阅了用户注册事件的服务
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:AuthService.Controllers.RegisterController.CheckUserNameAsync(System.String)">
            <summary>
            检查用户名是否可用
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:AuthService.Controllers.RegisterController.RegisterWithUserName(AuthService.Application.Commands.RegisterUserName.RegisterUserNameCommand)">
            <summary>
            用户名密码注册
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:AuthService.Controllers.RegisterController.RegisterWithPhoneNumber(AuthService.Application.Commands.RegisterPhone.RegisterPhoneCommand)">
            <summary>
            电话号码注册
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:AuthService.Controllers.RegisterController.ValidateSecretQuestion(System.String,System.String,System.String)">
            <summary>
            检查用户的密保问题和密保答案是否匹配
            </summary>
            <param name="userName"></param>
            <param name="question"></param>
            <param name="answer"></param>
            <returns></returns>
        </member>
        <member name="M:AuthService.Controllers.RegisterController.GetSecretQuestion(System.String)">
            <summary>
            获取用户的密保问题
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:AuthService.Controllers.RegisterController.ResetPassword(AuthService.Application.Commands.ResetPassword.ResetPasswordCommand)">
            <summary>
            重设密码
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:AuthService.Controllers.RegisterController.ChangePassword(AuthService.Application.Commands.ChangePassword.ChangePasswordCommand)">
            <summary>
            修改密码
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:AuthService.Controllers.RegisterController.GetUsersAsync(Arise.DDD.API.Paging.PagingParameters)">
            <summary>
            分页获取用户列表
            </summary>
            <param name="pagingParameters"></param>
            <returns></returns>
        </member>
        <member name="T:IdentityServerHost.Quickstart.UI.AccountController">
            <summary>
            This sample controller implements a typical login/logout/provision workflow for local and external accounts.
            The login service encapsulates the interactions with the user data store. This data store is in-memory only and cannot be used for production!
            The interaction service provides a way for the UI to communicate with identityserver for validation and context retrieval
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.AccountController.Login(System.String)">
            <summary>
            Entry point into the login workflow
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.AccountController.Login(IdentityServerHost.Quickstart.UI.LoginInputModel,System.String)">
            <summary>
            Handle postback from username/password login
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.AccountController.Logout(System.String)">
            <summary>
            Show logout page
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.AccountController.Logout(IdentityServerHost.Quickstart.UI.LogoutInputModel)">
            <summary>
            Handle logout page postback
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.ExternalController.Challenge(System.String,System.String)">
            <summary>
            initiate roundtrip to external authentication provider
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.ExternalController.Callback">
            <summary>
            Post processing of external authentication
            </summary>
        </member>
        <member name="T:IdentityServerHost.Quickstart.UI.ConsentController">
            <summary>
            This controller processes the consent UI
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.ConsentController.Index(System.String)">
            <summary>
            Shows the consent screen
            </summary>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.ConsentController.Index(IdentityServerHost.Quickstart.UI.ConsentInputModel)">
            <summary>
            Handles the consent screen postback
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.Extensions.IsNativeClient(IdentityServer4.Models.AuthorizationRequest)">
            <summary>
            Checks if the redirect URI is for a native client.
            </summary>
            <returns></returns>
        </member>
        <member name="T:IdentityServerHost.Quickstart.UI.GrantsController">
            <summary>
            This sample controller allows a user to revoke grants given to clients
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.GrantsController.Index">
            <summary>
            Show list of grants
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.GrantsController.Revoke(System.String)">
            <summary>
            Handle postback to revoke a client
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.HomeController.Error(System.String)">
            <summary>
            Shows the error page
            </summary>
        </member>
    </members>
</doc>
